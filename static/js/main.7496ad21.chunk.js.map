{"version":3,"sources":["components/MovieItem.js","components/MovieTabs.js","App.js","utils/api.js","reportWebVitals.js","index.js"],"names":["MovieItem","state","willWatch","this","props","movie","removeMovie","addMovieToWillWatch","removeMovieFromWillWatch","className","src","backdrop_path","poster_path","alt","title","vote_average","onClick","setState","type","bind","React","Component","MovieTabs","nextProps","nextState","sort_by","handleClick","value","updateSortBy","classNames","App","getMovies","fetch","currentPage","then","response","json","data","console","log","movies","results","total_pages","page","updateMovies","filter","item","id","updateMoviesWillWatch","moviesWillWatch","updatemoviesWillWatch","handleNext","changePage","handlePrev","prevProps","prevState","aria-label","aria-current","map","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7496ad21.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nclass MovieItem extends React.Component {\r\n    state = {\r\n        willWatch: false\r\n    }\r\n\r\n    // componentWillUnmount() {\r\n    //     console.log(this.props.movie.title)\r\n    //     console.log('unmount',);\r\n    // }\r\n\r\n    render() {\r\n        const { movie, removeMovie, addMovieToWillWatch, removeMovieFromWillWatch } = this.props\r\n        return (\r\n            <div className=\"card\">\r\n                <img\r\n                    className='card-img-top'\r\n                    src={`https://image.tmdb.org/t/p/w500${movie.backdrop_path ||\r\n                        movie.poster_path}`} alt=\"\" />\r\n                <div className=\"card-body\">\r\n                    <h6 className=\"card-title\">{movie.title}</h6>\r\n                    <div className='d-flex justify-content-between align-items-center'>\r\n                        <p className='mb-0'>Rating: {movie.vote_average}</p>\r\n                        {this.state.willWatch ? (\r\n                            <button\r\n                                onClick={() => {\r\n                                    this.setState({\r\n                                        willWatch: false\r\n                                    })\r\n                                    removeMovieFromWillWatch(movie)\r\n                                }}\r\n                                type='button'\r\n                                className='btn btn-success'>\r\n                                Remove Will Watch\r\n                            </button>\r\n                        ) : (\r\n                            <button\r\n                                onClick={() => {\r\n                                    this.setState({\r\n                                        willWatch: true\r\n                                    })\r\n                                    addMovieToWillWatch(movie)\r\n                                }}\r\n                                type='button'\r\n                                className='btn btn-secondary'>\r\n                                Add Will Watch\r\n                            </button>\r\n                        )}\r\n\r\n                    </div>\r\n                    <button onClick={removeMovie.bind(null, movie)}>Delete movie</button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default MovieItem\r\n","\r\nimport React from \"react\"\r\nimport classNames from \"classnames\"\r\nclass MovieTabs extends React.Component {\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        if (nextProps.sort_by !== this.props.sort_by) {\r\n            return true\r\n        } else {\r\n            return false\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const handleClick = (value) => {\r\n            return () => {\r\n                updateSortBy(value)\r\n            }\r\n        }\r\n\r\n        // const getClassByValue = value => {\r\n        //     return `nav-link ${sort_by === value ? \"active\" : \"\"}`\r\n        // }\r\n\r\n        const { updateSortBy } = this.props;\r\n        return (\r\n            <ul className=\"tabs nav nav-pills\">\r\n                <li className='nav-item'>\r\n                    <div\r\n                        onClick={handleClick(\"popularity.desc\")}\r\n                        className={classNames({ 'nav-link': true, 'active': (this.props.sort_by === 'popularity.desc') })}\r\n                    >\r\n                        Popularity desc\r\n                    </div>\r\n                </li>\r\n                <li className='nav-item'>\r\n                    <div\r\n                        onClick={handleClick(\"revenue.desc\")}\r\n                        className={classNames({ 'nav-link': true, 'active': (this.props.sort_by === 'revenue.desc') })}>\r\n                        Revenue desc\r\n                    </div>\r\n                </li>\r\n                <li className='nav-item'>\r\n                    <div\r\n                        onClick={handleClick(\"vote_average.desc\")}\r\n                        className={classNames({ 'nav-link': true, 'active': (this.props.sort_by === 'vote_average.desc') })}>\r\n                        Vote avetage desc\r\n                    </div>\r\n                </li>\r\n\r\n            </ul >\r\n        )\r\n    }\r\n}\r\n\r\nexport default MovieTabs;","import React from 'react';\nimport './App.css';\n// import { moviesData } from './moviesData'\nimport MovieItem from './components/MovieItem';\nimport MovieTabs from './components/MovieTabs';\nimport { API_URL, API_KEY_3 } from './utils/api'\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      movies: [],\n      moviesWillWatch: [],\n      sort_by: \"popularity.desc\",\n      total_pages: 500,\n      currentPage: 1\n    }\n  }\n\n  componentDidMount() {\n    console.log(\"didMount\")\n    this.getMovies()\n    // console.log('after fetch')\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    //console.log(\"didUpdate\")\n    // console.log(\"prev\", prevProps, prevState)\n    // console.log(\"this\", this.props, this.state)\n    if (prevState.sort_by !== this.state.sort_by) {\n      this.getMovies()\n    }\n    if (prevState.currentPage !== this.state.currentPage) {\n      this.getMovies()\n    }\n  }\n\n  getMovies = () => {\n    fetch(`${API_URL}/discover/movie?api_key=${API_KEY_3}&sort_by=${this.state.sort_by}&page=${this.state.currentPage}`)\n      .then((response) => {\n        return response.json()\n      })\n      .then((data) => {\n        console.log('data', data)\n        this.setState({\n          movies: data.results,\n          total_pages: data.total_pages,\n          currentPage: data.page\n        })\n      })\n  }\n\n  removeMovie = (movie) => {\n    const updateMovies = this.state.movies.filter(function (item) {\n      return item.id !== movie.id;\n    })\n    //console.log(updateMovies)\n    this.setState({\n      movies: updateMovies\n    })\n  }\n\n  addMovieToWillWatch = movie => {\n    // this.state.moviesWillWatch.push(movie)\n    //console.log(movie)\n    // const updateMoviesWillWatch = [...this.state.moviesWillWatch]\n    // updateMoviesWillWatch.push(movie);\n    const updateMoviesWillWatch = [...this.state.moviesWillWatch, movie]\n\n\n    this.setState({\n      moviesWillWatch: updateMoviesWillWatch\n    })\n\n  }\n\n  removeMovieFromWillWatch = (movie) => {\n    const updatemoviesWillWatch = this.state.moviesWillWatch.filter(function (item) {\n      return item.id !== movie.id;\n    })\n    // console.log(updatemoviesWillWatch)\n    this.setState({\n      moviesWillWatch: updatemoviesWillWatch\n    })\n  }\n\n  updateSortBy = value => {\n    this.setState({\n      sort_by: value,\n      currentPage: 1\n    });\n  };\n\n  handleNext = () => {\n    let changePage = this.state.currentPage + 1\n    if (changePage >= this.state.total_pages) {\n      this.setState({\n        currentPage: this.state.total_pages\n      })\n    } else {\n      this.setState({\n        currentPage: changePage\n      })\n    }\n  }\n\n  handlePrev = () => {\n    let changePage = this.state.currentPage - 1\n    if (changePage <= 1) {\n      this.setState({\n        currentPage: 1\n      })\n    } else {\n      this.setState({\n        currentPage: changePage\n      })\n    }\n\n  }\n\n\n\n  render() {\n    //console.log(\"render\", this.state.sort_by)\n    return (\n      <div className='container'>\n        <div className='row mt-4' >\n          <div className='col-9'>\n            <div className='row mb-4'>\n              <div className='col-12'>\n                <MovieTabs\n                  sort_by={this.state.sort_by}\n                  updateSortBy={this.updateSortBy} />\n              </div>\n            </div>\n            <nav aria-label=\"...\">\n              <ul className=\"pagination\">\n                <li className=\"page-item \">\n                  <button className=\"page-link\" onClick={this.handlePrev}> Previous</button>\n                </li>\n                <li className=\"page-item active\" aria-current=\"page\">\n                  <button className=\"page-link\" >{this.state.currentPage}</button></li>\n                <li className=\"page-item\">\n                  <button className=\"page-link\" >{this.state.total_pages}</button>\n                </li>\n\n                <li className=\"page-item\">\n                  <button className=\"page-link\" onClick={this.handleNext}>Next</button>\n                </li>\n              </ul>\n            </nav>\n            <div className='row'>\n              {this.state.movies.map(movie => {\n                return (\n                  <div className='col-6 mb-4' key={movie.id}>\n                    <MovieItem\n                      addMovieToWillWatch={this.addMovieToWillWatch}\n                      movie={movie}\n                      removeMovie={this.removeMovie}\n                      removeMovieFromWillWatch={this.removeMovieFromWillWatch}\n                    />\n                  </div>\n                );\n              })}\n            </div>\n          </div>\n          <div className='col-3'>\n            <p>Will Watch: {this.state.moviesWillWatch.length}</p>\n          </div>\n\n\n        </div>\n      </div >\n    )\n  }\n}\n\nexport default App;\n","export const API_URL = \"https://api.themoviedb.org/3\";\r\n\r\nexport const API_KEY_3 = \"acbb8b9724b040096914b5b4c6153b8c\";\r\n\r\nexport const API_KEY_4 = \"eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJhY2JiOGI5NzI0YjA0MDA5NjkxNGI1YjRjNjE1M2I4YyIsInN1YiI6IjYwZTAxMzgzYjY4NmI5MDAyZDYxODVlNSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.i5xeqvl6xjrAVz-M1woBkGCWzx07dkdtQaykz-eI294\";\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}